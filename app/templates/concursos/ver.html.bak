{% extends "base.html" %}

{% block title %}Concurso #{{ concurso.id }} - {{ super() }}{% endblock %}

{% block content %}
<div class="card">    <div cla        // Check if there's no file input and there's no existing file, prevent submission
            const hasTkdFileId = "{{ concurso.tkd_file_id }}" !== "";
            if (!tkdFileInput.files.length && !hasTkdFileId) {
                e.preventDefault();
                alert('Debe subir un archivo PDF para el TKD');
                return false;
            }d-header d-flex justify-content-between align-items-center">        <h2 class="mb-0">Concurso #{{ concurso.id }}</h2>        <div class="d-flex align-items-center">
            <!-- Three-dot vertical menu for Edit/Delete -->
            <div class="dropdown">
                <button class="btn btn-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-three-dots-vertical"></i>
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <a class="dropdown-item text-warning" href="{{ url_for('concursos.editar', concurso_id=concurso.id) }}">
                            <i class="bi bi-pencil"></i> Editar
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#eliminarModal">
                            <i class="bi bi-trash"></i> Eliminar
                        </a>
                    </li>
                </ul>
            </div>        </div>
    </div>    <div class="card-body">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs mb-4" id="concursoTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="info-tab" data-bs-toggle="tab" data-bs-target="#info" type="button" role="tab" aria-controls="info" aria-selected="true">
                    <i class="bi bi-info-circle"></i> Información del Concurso
                </button>
            </li>            <li class="nav-item" role="presentation">
                <button class="nav-link" id="documentos-tab" data-bs-toggle="tab" data-bs-target="#documentos" type="button" role="tab" aria-controls="documentos" aria-selected="false">
                    <i class="bi bi-file-earmark-text"></i> Documentos
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="notificaciones-tab" data-bs-toggle="tab" data-bs-target="#notificaciones" type="button" role="tab" aria-controls="notificaciones" aria-selected="false">
                    <i class="bi bi-bell"></i> Notificaciones
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="tribunal-tab" data-bs-toggle="tab" data-bs-target="#tribunal" type="button" role="tab" aria-controls="tribunal" aria-selected="false">
                    <i class="bi bi-people"></i> Tribunal
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="postulantes-tab" data-bs-toggle="tab" data-bs-target="#postulantes" type="button" role="tab" aria-controls="postulantes" aria-selected="false">
                    <i class="bi bi-person-badge"></i> Postulantes
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="historial-tab" data-bs-toggle="tab" data-bs-target="#historial" type="button" role="tab" aria-controls="historial" aria-selected="false">
                    <i class="bi bi-clock-history"></i> Historial
                </button>
            </li>
            {% if concurso.sustanciacion %}
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="sustanciacion-tab" data-bs-toggle="tab" data-bs-target="#sustanciacion" type="button" role="tab" aria-controls="sustanciacion" aria-selected="false">
                    <i class="bi bi-calendar-event"></i> Sustanciación
                </button>
            </li>
            {% endif %}
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="asignaturas-externas-tab" data-bs-toggle="tab" data-bs-target="#asignaturas-externas-content" type="button" role="tab" aria-controls="asignaturas-externas-content" aria-selected="false">
                    <i class="bi bi-journals"></i> Asignaturas (Info Externa)
                </button>
            </li>
        </ul>        <!-- Tab content -->
        <div class="tab-content">
            <!-- Tab 1: Información y Detalles -->            
            {% include 'concursos/partials/ver/_info_tab.html' %}
              
            <!-- Tab 2: Documentos Generados -->            
            {% include 'concursos/partials/ver/_documentos_tab.html' %}
            
            <!-- Tab 3: Panel de Notificaciones -->
            {% include 'concursos/partials/ver/_notificaciones_tab.html' %}
            
            <!-- Tab 4: Tribunal -->
            {% include 'concursos/partials/ver/_tribunal_tab.html' %}
            
            <!-- Tab 4: Postulantes -->
            {% include 'concursos/partials/ver/_postulantes_tab.html' %}
            
            <!-- Tab 5: Historial de Estados -->
            {% include 'concursos/partials/ver/_historial_tab.html' %}
            
            <!-- Tab 6: Sustanciación (only if exists) -->
            {% if concurso.sustanciacion %}
            {% include 'concursos/partials/ver/_sustanciacion_tab.html' %}
            {% endif %}
              
            <!-- Tab for Asignaturas from external source -->
            {% include 'concursos/partials/ver/_asignaturas_externas_tab.html' %}
        </div>
    </div>
</div>

<!-- Modal de confirmación de eliminación -->
{% include 'concursos/partials/ver/_eliminar_concurso_modal.html' %}

<!-- Modal de confirmación de eliminación de temas -->
{% include 'concursos/partials/ver/_reset_temas_modal.html' %}

<!-- Modal para sortear tema -->
{% include 'concursos/partials/ver/_sortear_tema_modal.html' %}

<!-- Modal for eliminar tema sorteado -->
{% include 'concursos/partials/ver/_reset_tema_sorteado_modal.html' %}

<!-- Modal para resetear temas de un miembro específico -->
{% include 'concursos/partials/ver/_reset_temas_miembro_modal.html' %}

<!-- Modal para cargar TKD -->
{% include 'concursos/partials/ver/_cargar_tkd_modal.html' %}

<!-- Modal para borrar TKD -->
{% include 'concursos/partials/ver/_borrar_tkd_modal.html' %}

<!-- Modal para desconsolidar temas -->
{% include 'concursos/partials/ver/_desconsolidar_temas_modal.html' %}

<!-- Modal para finalizar carga de temas -->
{% include 'concursos/partials/ver/_finalizar_carga_temas_modal.html' %}

{% endblock %}

{% block styles %}
<style>
.temas-list {
    display: flex;
    flex-wrap: wrap;
}
.temas-list .badge {
    border: 1px solid #dee2e6;
}
</style>
{% endblock %}

{% block scripts %}
<script src="{{ url_for('static', filename='js/fetch-programas.js') }}"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle TKD file requirement based on existing file
    const cargarTkdModal = document.getElementById('cargarTkdModal');
    if (cargarTkdModal) {
        const tkdFileInput = document.getElementById('tkd_file');
        const tkdForm = cargarTkdModal.querySelector('form');
        
        tkdForm.addEventListener('submit', function(e) {
            const tkdNumber = document.getElementById('tkd_number').value.trim();
            if (!tkdNumber) {
                e.preventDefault();
                alert('Debe ingresar un número de TKD');
                return false;
            }
            
            // If there's no file input and there's no existing file, prevent submission
            const hasTkdFileId = "{{ concurso.tkd_file_id }}" !== "";
            if (!tkdFileInput.files.length && !hasTkdFileId) {
                e.preventDefault();
                alert('Debe subir un archivo PDF para el TKD');
                return false;
            }
        });
    }
    
    // Handle TKD delete confirmation
    const borrarTkdModal = document.getElementById('borrarTkdModal');
    if (borrarTkdModal) {
        const borrarTkdForm = borrarTkdModal.querySelector('form');
        
        borrarTkdForm.addEventListener('submit', function(e) {
            if (!confirm('¿Está seguro que desea eliminar el respaldo TKD? Esta acción no se puede deshacer.')) {
                e.preventDefault();
                return false;
            }
        });
    }

    // Check if the sorteo modal exists on this page
    const sorteoModal = document.getElementById('sortearTemaModal');
    if (!sorteoModal) return;
    
    const btnIniciarSorteo = document.getElementById('btn-iniciar-sorteo');
    const sorteoAnimation = document.getElementById('sorteo-animation');
    const sorteoResult = document.getElementById('sorteo-result');
    const progressBar = sorteoAnimation.querySelector('.progress-bar');
    const temasContainer = document.querySelector('.temas-container');
    
    btnIniciarSorteo.addEventListener('click', function() {
        // Hide the result section if it was previously shown
        sorteoResult.classList.add('d-none');
        sorteoAnimation.classList.remove('d-none');
        
        // Disable the button during the animation
        btnIniciarSorteo.disabled = true;
        
        // Animate the progress bar
        let progress = 0;
        const interval = setInterval(function() {
            progress += 2;
            progressBar.style.width = progress + '%';
            
            if (progress >= 100) {
                clearInterval(interval);
                realizarSorteo();
            }
        }, 50); // 50ms * 50 steps = 2.5 seconds total
    });
    
    function realizarSorteo() {
        // Make AJAX request to the backend to get a random tema
        fetch('{{ url_for("concursos.realizar_sorteo", concurso_id=concurso.id) }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': '{{ csrf_token() if csrf_token else "" }}'
            }
        })        .then(response => {
            if (!response.ok) {
                return response.json().then(errorData => {
                    throw new Error(errorData.error || 'Error en el sorteo');
                });
            }
            return response.json();
        })
        .then(data => {
            // Display the result
            displaySorteoResult(data);
        })
        .catch(error => {
            console.error('Error:', error);
            sorteoAnimation.classList.add('d-none');
            alert('Ocurrió un error al realizar el sorteo: ' + error.message);
            btnIniciarSorteo.disabled = false;
        });
    }
      function displaySorteoResult(data) {
        // Clear previous results
        temasContainer.innerHTML = '';
        
        // Convert the selected temas string to an array
        const drawnTopicsArray = data.selectedTemas ? data.selectedTemas.split('|') : [];
        
        // Create HTML for each tema
        if (data.allTemas && data.allTemas.length > 0) {
            data.allTemas.forEach(tema => {
                const isSelected = drawnTopicsArray.includes(tema);
                
                const temaElement = document.createElement('div');
                temaElement.className = 'card mb-2' + (isSelected ? ' border-success' : '');
                
                const cardBody = document.createElement('div');
                cardBody.className = 'card-body' + (isSelected ? ' bg-success bg-opacity-25' : '');
                
                if (isSelected) {
                    cardBody.innerHTML = `<strong>${tema}</strong> <i class="bi bi-check-circle-fill text-success"></i>`;
                } else {
                    cardBody.textContent = tema;
                }
                
                temaElement.appendChild(cardBody);
                temasContainer.appendChild(temaElement);
            });
        }
        
        // Show number of temas drawn
        const numDrawnBadge = document.createElement('div');
        numDrawnBadge.className = 'alert alert-info mt-3';
        numDrawnBadge.innerHTML = `Se han sorteado <strong>${data.numDrawn}</strong> tema(s) de acuerdo a la configuración del sistema.`;
        temasContainer.appendChild(numDrawnBadge);
        
        // Hide animation and show result
        sorteoAnimation.classList.add('d-none');
        sorteoResult.classList.remove('d-none');
        
        // Re-enable the button
        btnIniciarSorteo.disabled = false;
          // Update button text
        btnIniciarSorteo.textContent = 'Sortear Nuevamente';
    }
});
</script>

{# gestionar_notas_adicionales_modal.html is temporarily disabled #}

<!-- Modal para Panel de Notificaciones -->
{% include 'concursos/partials/ver/_notificaciones_main_modal.html' %}

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Check if URL hash is #notificacionesModal
    if (window.location.hash === '#notificacionesModal') {
        // Open the modal
        var notificacionesModal = new bootstrap.Modal(document.getElementById('notificacionesModal'));
        notificacionesModal.show();
    }
    
    // Check if URL hash is #notificacionesTab
    if (window.location.hash === '#notificacionesTab') {
        // Switch to the Notificaciones tab
        document.getElementById('notificaciones-tab').click();
    }
});
</script>

<script>
// Handle the resetTemasModal
document.addEventListener('DOMContentLoaded', function() {
    // Check if the resetTemasModal exists
    const resetTemasModal = document.getElementById('resetTemasModal');
    if (resetTemasModal) {
        // Add confirmation for the reset temas action
        const resetTemasForm = document.getElementById('resetTemasForm');
        if (resetTemasForm) {
            resetTemasForm.addEventListener('submit', function(e) {
                const confirmMessage = '¿Está seguro que desea eliminar los temas y permitir al tribunal cargarlos nuevamente?';
                
                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                    return false;
                }
            });
        }
    }
});

// Handle the resetTemasMiembroModal
document.addEventListener('DOMContentLoaded', function() {
    const resetTemasMiembroModal = document.getElementById('resetTemasMiembroModal');
    if (resetTemasMiembroModal) {
        const resetTemasMiembroForm = resetTemasMiembroModal.querySelector('form');
        const resetTemasMiembroId = document.getElementById('resetTemasMiembroId');
        const resetTemasMiembroNombre = document.getElementById('resetTemasMiembroNombre');
        
        // Listen for modal opening to set the correct action URL and member info
        resetTemasMiembroModal.addEventListener('show.bs.modal', function(event) {
            const button = event.relatedTarget;
            const miembroId = button.getAttribute('data-miembro-id');
            const miembroNombre = button.getAttribute('data-miembro-nombre');
            
            resetTemasMiembroId.value = miembroId;
            resetTemasMiembroNombre.textContent = miembroNombre;
            resetTemasMiembroForm.action = "{{ url_for('tribunal.reset_temas_miembro', concurso_id=concurso.id, miembro_id=0) }}".replace('/0', '/' + miembroId);
        });
    }
});

// Handle the desconsolidarTemasModal
document.addEventListener('DOMContentLoaded', function() {
    const desconsolidarTemasModal = document.getElementById('desconsolidarTemasModal');
    if (desconsolidarTemasModal) {
        const desconsolidarTemasForm = document.getElementById('desconsolidarTemasForm');
        
        if (desconsolidarTemasForm) {
            desconsolidarTemasForm.addEventListener('submit', function(e) {
                const confirmMessage = '¿Está seguro que desea desconsolidar los temas? Se mantendrán las propuestas individuales de cada miembro.';
                
                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                    return false;
                }
            });
        }
    }
});

// Handle the finalizarCargaTemasModal
document.addEventListener('DOMContentLoaded', function() {
    const finalizarCargaTemasModal = document.getElementById('finalizarCargaTemasModal');
    if (finalizarCargaTemasModal) {
        const finalizarCargaTemasForm = document.getElementById('finalizarCargaTemasForm');
        
        if (finalizarCargaTemasForm) {
            finalizarCargaTemasForm.addEventListener('submit', function(e) {
                const confirmMessage = '¿Está seguro que desea consolidar y finalizar la carga de temas? Esta acción impedirá que los miembros del tribunal puedan modificar sus propuestas.';
                
                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                    return false;
                }
            });
        }
    }
});
</script>
{% endblock %}